/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nlu.QLDN3.db.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.nlu.QLDN3.db.model.NhanVien;
import com.nlu.QLDN3.db.model.NhanVienModel;
import com.nlu.QLDN3.db.model.NhanVienSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the NhanVien service. Represents a row in the &quot;QLDN_NhanVien&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.nlu.QLDN3.db.model.NhanVienModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link NhanVienImpl}.
 * </p>
 *
 * @author ThanhToa-PC
 * @see NhanVienImpl
 * @see com.nlu.QLDN3.db.model.NhanVien
 * @see com.nlu.QLDN3.db.model.NhanVienModel
 * @generated
 */
@JSON(strict = true)
public class NhanVienModelImpl extends BaseModelImpl<NhanVien>
	implements NhanVienModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a nhan vien model instance should use the {@link com.nlu.QLDN3.db.model.NhanVien} interface instead.
	 */
	public static final String TABLE_NAME = "QLDN_NhanVien";
	public static final Object[][] TABLE_COLUMNS = {
			{ "maNhanVien", Types.VARCHAR },
			{ "maCongTy", Types.VARCHAR },
			{ "tenNhanVien", Types.VARCHAR },
			{ "ngaySinh", Types.VARCHAR },
			{ "gioiTinh", Types.VARCHAR },
			{ "SDT", Types.VARCHAR },
			{ "ngayVaoLam", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table QLDN_NhanVien (maNhanVien VARCHAR(75) not null primary key,maCongTy VARCHAR(75) null,tenNhanVien VARCHAR(75) null,ngaySinh VARCHAR(75) null,gioiTinh VARCHAR(75) null,SDT VARCHAR(75) null,ngayVaoLam VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table QLDN_NhanVien";
	public static final String ORDER_BY_JPQL = " ORDER BY nhanVien.maNhanVien ASC";
	public static final String ORDER_BY_SQL = " ORDER BY QLDN_NhanVien.maNhanVien ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.nlu.QLDN3.db.model.NhanVien"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.nlu.QLDN3.db.model.NhanVien"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static NhanVien toModel(NhanVienSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		NhanVien model = new NhanVienImpl();

		model.setMaNhanVien(soapModel.getMaNhanVien());
		model.setMaCongTy(soapModel.getMaCongTy());
		model.setTenNhanVien(soapModel.getTenNhanVien());
		model.setNgaySinh(soapModel.getNgaySinh());
		model.setGioiTinh(soapModel.getGioiTinh());
		model.setSDT(soapModel.getSDT());
		model.setNgayVaoLam(soapModel.getNgayVaoLam());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<NhanVien> toModels(NhanVienSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<NhanVien> models = new ArrayList<NhanVien>(soapModels.length);

		for (NhanVienSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.nlu.QLDN3.db.model.NhanVien"));

	public NhanVienModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _maNhanVien;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setMaNhanVien(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _maNhanVien;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return NhanVien.class;
	}

	@Override
	public String getModelClassName() {
		return NhanVien.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("maNhanVien", getMaNhanVien());
		attributes.put("maCongTy", getMaCongTy());
		attributes.put("tenNhanVien", getTenNhanVien());
		attributes.put("ngaySinh", getNgaySinh());
		attributes.put("gioiTinh", getGioiTinh());
		attributes.put("SDT", getSDT());
		attributes.put("ngayVaoLam", getNgayVaoLam());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String maNhanVien = (String)attributes.get("maNhanVien");

		if (maNhanVien != null) {
			setMaNhanVien(maNhanVien);
		}

		String maCongTy = (String)attributes.get("maCongTy");

		if (maCongTy != null) {
			setMaCongTy(maCongTy);
		}

		String tenNhanVien = (String)attributes.get("tenNhanVien");

		if (tenNhanVien != null) {
			setTenNhanVien(tenNhanVien);
		}

		String ngaySinh = (String)attributes.get("ngaySinh");

		if (ngaySinh != null) {
			setNgaySinh(ngaySinh);
		}

		String gioiTinh = (String)attributes.get("gioiTinh");

		if (gioiTinh != null) {
			setGioiTinh(gioiTinh);
		}

		String SDT = (String)attributes.get("SDT");

		if (SDT != null) {
			setSDT(SDT);
		}

		String ngayVaoLam = (String)attributes.get("ngayVaoLam");

		if (ngayVaoLam != null) {
			setNgayVaoLam(ngayVaoLam);
		}
	}

	@JSON
	@Override
	public String getMaNhanVien() {
		if (_maNhanVien == null) {
			return StringPool.BLANK;
		}
		else {
			return _maNhanVien;
		}
	}

	@Override
	public void setMaNhanVien(String maNhanVien) {
		_maNhanVien = maNhanVien;
	}

	@JSON
	@Override
	public String getMaCongTy() {
		if (_maCongTy == null) {
			return StringPool.BLANK;
		}
		else {
			return _maCongTy;
		}
	}

	@Override
	public void setMaCongTy(String maCongTy) {
		_maCongTy = maCongTy;
	}

	@JSON
	@Override
	public String getTenNhanVien() {
		if (_tenNhanVien == null) {
			return StringPool.BLANK;
		}
		else {
			return _tenNhanVien;
		}
	}

	@Override
	public void setTenNhanVien(String tenNhanVien) {
		_tenNhanVien = tenNhanVien;
	}

	@JSON
	@Override
	public String getNgaySinh() {
		if (_ngaySinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _ngaySinh;
		}
	}

	@Override
	public void setNgaySinh(String ngaySinh) {
		_ngaySinh = ngaySinh;
	}

	@JSON
	@Override
	public String getGioiTinh() {
		if (_gioiTinh == null) {
			return StringPool.BLANK;
		}
		else {
			return _gioiTinh;
		}
	}

	@Override
	public void setGioiTinh(String gioiTinh) {
		_gioiTinh = gioiTinh;
	}

	@JSON
	@Override
	public String getSDT() {
		if (_SDT == null) {
			return StringPool.BLANK;
		}
		else {
			return _SDT;
		}
	}

	@Override
	public void setSDT(String SDT) {
		_SDT = SDT;
	}

	@JSON
	@Override
	public String getNgayVaoLam() {
		if (_ngayVaoLam == null) {
			return StringPool.BLANK;
		}
		else {
			return _ngayVaoLam;
		}
	}

	@Override
	public void setNgayVaoLam(String ngayVaoLam) {
		_ngayVaoLam = ngayVaoLam;
	}

	@Override
	public NhanVien toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (NhanVien)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		NhanVienImpl nhanVienImpl = new NhanVienImpl();

		nhanVienImpl.setMaNhanVien(getMaNhanVien());
		nhanVienImpl.setMaCongTy(getMaCongTy());
		nhanVienImpl.setTenNhanVien(getTenNhanVien());
		nhanVienImpl.setNgaySinh(getNgaySinh());
		nhanVienImpl.setGioiTinh(getGioiTinh());
		nhanVienImpl.setSDT(getSDT());
		nhanVienImpl.setNgayVaoLam(getNgayVaoLam());

		nhanVienImpl.resetOriginalValues();

		return nhanVienImpl;
	}

	@Override
	public int compareTo(NhanVien nhanVien) {
		String primaryKey = nhanVien.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof NhanVien)) {
			return false;
		}

		NhanVien nhanVien = (NhanVien)obj;

		String primaryKey = nhanVien.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<NhanVien> toCacheModel() {
		NhanVienCacheModel nhanVienCacheModel = new NhanVienCacheModel();

		nhanVienCacheModel.maNhanVien = getMaNhanVien();

		String maNhanVien = nhanVienCacheModel.maNhanVien;

		if ((maNhanVien != null) && (maNhanVien.length() == 0)) {
			nhanVienCacheModel.maNhanVien = null;
		}

		nhanVienCacheModel.maCongTy = getMaCongTy();

		String maCongTy = nhanVienCacheModel.maCongTy;

		if ((maCongTy != null) && (maCongTy.length() == 0)) {
			nhanVienCacheModel.maCongTy = null;
		}

		nhanVienCacheModel.tenNhanVien = getTenNhanVien();

		String tenNhanVien = nhanVienCacheModel.tenNhanVien;

		if ((tenNhanVien != null) && (tenNhanVien.length() == 0)) {
			nhanVienCacheModel.tenNhanVien = null;
		}

		nhanVienCacheModel.ngaySinh = getNgaySinh();

		String ngaySinh = nhanVienCacheModel.ngaySinh;

		if ((ngaySinh != null) && (ngaySinh.length() == 0)) {
			nhanVienCacheModel.ngaySinh = null;
		}

		nhanVienCacheModel.gioiTinh = getGioiTinh();

		String gioiTinh = nhanVienCacheModel.gioiTinh;

		if ((gioiTinh != null) && (gioiTinh.length() == 0)) {
			nhanVienCacheModel.gioiTinh = null;
		}

		nhanVienCacheModel.SDT = getSDT();

		String SDT = nhanVienCacheModel.SDT;

		if ((SDT != null) && (SDT.length() == 0)) {
			nhanVienCacheModel.SDT = null;
		}

		nhanVienCacheModel.ngayVaoLam = getNgayVaoLam();

		String ngayVaoLam = nhanVienCacheModel.ngayVaoLam;

		if ((ngayVaoLam != null) && (ngayVaoLam.length() == 0)) {
			nhanVienCacheModel.ngayVaoLam = null;
		}

		return nhanVienCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{maNhanVien=");
		sb.append(getMaNhanVien());
		sb.append(", maCongTy=");
		sb.append(getMaCongTy());
		sb.append(", tenNhanVien=");
		sb.append(getTenNhanVien());
		sb.append(", ngaySinh=");
		sb.append(getNgaySinh());
		sb.append(", gioiTinh=");
		sb.append(getGioiTinh());
		sb.append(", SDT=");
		sb.append(getSDT());
		sb.append(", ngayVaoLam=");
		sb.append(getNgayVaoLam());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.nlu.QLDN3.db.model.NhanVien");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>maNhanVien</column-name><column-value><![CDATA[");
		sb.append(getMaNhanVien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maCongTy</column-name><column-value><![CDATA[");
		sb.append(getMaCongTy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tenNhanVien</column-name><column-value><![CDATA[");
		sb.append(getTenNhanVien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngaySinh</column-name><column-value><![CDATA[");
		sb.append(getNgaySinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gioiTinh</column-name><column-value><![CDATA[");
		sb.append(getGioiTinh());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SDT</column-name><column-value><![CDATA[");
		sb.append(getSDT());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayVaoLam</column-name><column-value><![CDATA[");
		sb.append(getNgayVaoLam());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = NhanVien.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			NhanVien.class
		};
	private String _maNhanVien;
	private String _maCongTy;
	private String _tenNhanVien;
	private String _ngaySinh;
	private String _gioiTinh;
	private String _SDT;
	private String _ngayVaoLam;
	private NhanVien _escapedModel;
}